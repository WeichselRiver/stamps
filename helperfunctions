# Ähnlichkeitstrafo mittels vec2ddtransf

library(tidyverse)
df <- readxl::read_xlsx("Trafo.xlsx")
library(vec2dtransf)
st <- SimilarityTransformation(controlPoints = data.frame(df))
calculateParameters(st)
getParameters(st)

ad.example("parrots")#Shift imagemap.shift <- function(x,y) list(x=x+10,y=y+30)imwarp(im,map=map.shift) %>% plot#Shift image (backward transform)imwarp(im,map=map.shift,dir="backward") %>% plot

library(imager)
im1 <- load.image("picturesWtmb/13_1_b.JPG")im2 <- load.image("picturesWtmb/13_2_PFI.JPG") 
im_list <- imlist(im1, im2)im_app <- imappend(im_list, "x")grabPoint(im_app)
df = data.frame(xs = c(), ys = c(), xt = c(), yt = c())
im3 <- imdraw(im1, im2, opacity = 0.5)

for (i in 1:4 ){  im_app <- imappend(im_list, "x")  # display(im3)  cat("Grab point in source\n")  rt <- grabPoint(im_app)  df[i, 1] <- rt[1]  df[i, 2] <- rt[2]  cat("Grab point in target\n")  rt <- grabPoint(im_app)  df[i, 3] <- rt[1] - width(im1)  df[i, 4] <- rt[2]  print(df)}
